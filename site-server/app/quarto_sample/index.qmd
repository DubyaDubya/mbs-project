---
title: "How the Federal Reserve Took from the Future and Gave to the Past"
execute:
    echo: false
format:
    html: 
        code-fold: true
page-layout: article
jupyter: python3
---


### Purpose

The purpose of this report is to explore the Federal Reserve's impact on
the US Mortgage market through its covid-era policy of Quantitative Easing and its ongoing post-covid policy of Quantitative Tightening. The report uses data from the Federal Reserve and from Fannie Mae and Freddie Mac to show a link between the Federal Reserve's open market operations and the characteristics of residential mortgage borrowers. 

### Overview of Findings
The report finds that the Fed's policies caused a surge in residential mortgage origination financed at very low rates. Almost all of this cheap financing went to pre-existing home-owners, and most was used for refinancing. As a result, the weighted average Mortgage Payment factor for mortgages issued since August of 2019 (the beginning of the period surveyed) is .00474, while weighted average mortgage payment factor for a buyer today is .00646. This means that a home-buyer today will have a 36% higher monthly payment on a home of the same price. From another perspective, it means a home seller today would have to buy a new home at a price 27% lower than their current home value to pay the same monthly payment.

This represents a threat to both demand and supply in the housing market, as buyers will struggle with increased costs of financing and potential sellers will be incentivized to stay in their homes and keep what are ultimately subsidized rates. This supply-demand mismatch has already begun to cause low volume in the housing market, and as the average loan term is over 25 years, this is likely to persist in the long term.


```{python}
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"

import plotly.graph_objects as go
import plotly.express as px
from plotly.subplots import make_subplots
from pyarrow import parquet as pq, fs
import pyarrow as pa
from typing import List, Any
from collections.abc import Mapping
import os


aws_access_key = os.getenv('AWS_ACCESS_KEY')
aws_secret_key = os.getenv('AWS_SECRET_KEY')
aws_region = os.getenv('AWS_REGION')

fnm_security_issuance_src = os.environ['FNM_SECURITY_ISSUANCE_SRC']
fnm_security_issuance_dest = os.environ['FNM_SECURITY_ISSUANCE_DEST']
fnm_security_issuance_folder = os.environ['FNM_SECURITY_ISSUANCE_FOLDER']

fnm_loan_issuance_src = os.environ['FNM_LOAN_ISSUANCE_SRC']
fnm_loan_issuance_dest = os.environ['FNM_LOAN_ISSUANCE_DEST']

fre_security_issuance_src = os.environ['FRE_SECURITY_ISSUANCE_SRC']
fre_security_issuance_dest = os.environ['FRE_SECURITY_ISSUANCE_DEST']
fre_security_issuance_folder = os.environ['FRE_SECURITY_ISSUANCE_FOLDER']

fre_loan_issuance_src = os.environ['FRE_LOAN_ISSUANCE_SRC']
fre_loan_issuance_dest = os.environ['FRE_LOAN_ISSUANCE_DEST']

full_security_issuance_dest = os.environ['FULL_SECURITY_ISSUANCE_DEST']
full_security_issuance_folder = os.environ['FULL_SECURITY_ISSUANCE_FOLDER']

full_loan_issuance_dest = os.environ['FULL_LOAN_ISSUANCE_DEST']

fed_holdings_dest = os.environ['FED_HOLDINGS_DEST']
fed_holdings_folder = os.environ['FED_HOLDINGS_FOLDER']

final_folder=os.environ['FINAL_QUERIES_FOLDER']



s3 = fs.S3FileSystem(access_key=aws_access_key,
                     secret_key=aws_secret_key,
                     region=aws_region)
```

```{python}
data_table1 = pq.read_table(final_folder + "/query-0.parquet", filesystem=s3)

def y_m_array(table: pa.Table, year_col_name: str, month_col_name: str) -> List[str]:
    years = table.column('Year').to_pylist()
    months = table.column('Month').to_pylist()
    return ['-'.join((str(year),str(months[i]),)) for i, year in enumerate(years)]

y_m_array1 = y_m_array(data_table1, 'Year', 'Month')

w_avg_int_array = [w_avg_int for w_avg_int in data_table1.column('w_avg_int').to_pylist()]
total_purchases = [total_purchases for total_purchases in data_table1.column('total_purchases').to_pylist()]
mbs_purchases = [mbs_purchases for mbs_purchases in data_table1.column('mbs_purchases').to_pylist()]


def dual_axis_chart(x_array: List[str], y_arrays_axis1 : Mapping[str, List[Any]], y_arrays_axis2 : Mapping[str, List[Any]],
                    x_axis_title: str, y_axes_titles: List[str], title: str) -> go.Figure:
    plot = make_subplots(specs=[[{"secondary_y": True}]])
    for entry in y_arrays_axis1.keys():
        plot.add_trace(
            go.Scatter(x=x_array, y=y_arrays_axis1[entry], name=entry),
            secondary_y=False
        )
    for entry in y_arrays_axis2.keys():
        plot.add_trace(
            go.Scatter(x=x_array, y=y_arrays_axis2[entry], name=entry),
            secondary_y=True
        )
    plot.update_layout(title_text=title)
    plot.update_xaxes(title_text=x_axis_title)
    plot.update_yaxes(title_text=y_axes_titles[0], secondary_y=False)
    plot.update_yaxes(title_text=y_axes_titles[1], secondary_y=True)
    return plot


#data1 weighted average interest rate vs fed net purchases
y1_arrays = {"weighted average loan interest rate": w_avg_int_array}
y2_arrays = {"fed monthly balance sheet change": total_purchases}
title_text = "weighted average interest rate plotted with fed balance sheet changes"
x_title = "Year and Month"
y_titles = ["Interest Rate (%)", "Fed Balance sheet monthly increase"]
plot2 = dual_axis_chart(y_m_array1, y1_arrays, y2_arrays, x_title, y_titles, title_text)

#data2 issuance_upb vs fed net purchases
data_table2 = pq.read_table(final_folder + "/query-1.parquet", filesystem=s3)
y_m_2 = y_m_array(data_table2, 'Year', 'Month')
total_issuance_upb = [upb for upb in data_table2.column('total_issuance_upb').to_pylist()]
y1_arrays = {}
y2_arrays["total UPB of newly issued pools"] = total_issuance_upb
title_text = "total UPB of newly issued fannie mae pools plotted next to fed balance sheet changes in the same month"
y_titles[1] = "Trillions of dollars"
plot1 = dual_axis_chart(y_m_array1, y1_arrays, y2_arrays, x_title, y_titles, title_text)


#need to figure out plotly express/ pandas dependency issue for this one 
data_table3 = pq.read_table(final_folder + "/query-2.parquet", filesystem=s3)
wide_df = data_table3.to_pandas()
wide_df["Year_Month"] = wide_df['Year'].astype(str) +"-"+ wide_df["Month"].astype(str)
wide_df["retail_upb_pct"] = 100 * wide_df["retail_upb"]/ wide_df["total_upb"]
wide_df["correspondent_upb_pct"] = 100 * wide_df["correspondent_upb"]/ wide_df["total_upb"]
wide_df["broker_upb_pct"] = 100 * wide_df["broker_upb"]/ wide_df["total_upb"]
wide_df["unknown_upb_pct"] = 100 * wide_df["unknown_upb"]/ wide_df["total_upb"]

plot3 = px.line(wide_df, x="Year_Month", y=["broker_upb_pct"],
                title="Total UPB by Loan Source")

#"retail_upb_pct", "correspondent_upb_pct", "broker_upb_pct", "unknown_upb_pct"
data_table4 = pq.read_table(final_folder + "/query-3.parquet", filesystem=s3)
wide_df = data_table4.to_pandas()
wide_df["Year_Month"] = wide_df['Year'].astype(str) +"-"+ wide_df["Month"].astype(str)
wide_df["cash_out_refi_pct"] = 100 * wide_df["cash_out_refi"]/ wide_df["total"]
wide_df["no_cash_refi_pct"] = 100 * wide_df["no_cash_refi"]/ wide_df["total"]
wide_df["purchase_pct"] = 100 * wide_df["purchase"]/ wide_df["total"]
wide_df["modified_loss_mitigation_pct"] = 100 * wide_df["modified_loss_mitigation"]/ wide_df["total"]\

y1_arrays = {"Purchases": wide_df['purchase']}
y2_arrays = {"fed monthly balance sheet change": wide_df['total_purchases']}
title_text = "Fed balance sheet changes vs purchases"
x_title = "Year and Month"
y_titles = ["Fed balance sheet changes", "loans originated for purchases"]
plot101 = dual_axis_chart(y_m_array1, y1_arrays, y2_arrays, x_title, y_titles, title_text)

plot4 = px.bar(wide_df, x="Year_Month", y=["purchase", "cash_out_refi", "no_cash_refi","modified_loss_mitigation"],
                title="Total UPB by Loan Purpose")
plot5 = px.line(wide_df, x="Year_Month", y=["cash_out_refi"],
                title="UPB of Cash Out Refinances Over Time")

plot6 = px.line(wide_df, x="Year_Month", y=["purchase"],
                title="UPB of Purchases Over Time")
plot6.update_yaxes(range=[0, 90_000_000_000])
plot7 = px.line(wide_df, x="Year_Month", y=["no_cash_refi"],
                title="UPB of Non-cash Refinances Over Time")

data_table5 = pq.read_table(final_folder + "/query-5.parquet", filesystem=s3)
wide_df=data_table5.to_pandas()
wide_df["Year_Month"] = wide_df['Year'].astype(str) +"-"+ wide_df["Month"].astype(str)

plot8 = px.line(wide_df, x="Year_Month", y=["first_time_upb", "not_first_time_upb"],
                title="Wide-Form Input")

data_table6 = pq.read_table(final_folder +'/query-6.parquet', filesystem=s3)
wide_df=data_table6.to_pandas()
wide_df["Year_Month"] = wide_df['Year'].astype(str) +"-"+ wide_df["Month"].astype(str)
plot9 = px.bar(wide_df, x="Year_Month", y=['primary_residence_fraction', 'secondary_residence_fraction',
                                    'investment_property_fraction', 'unknown_fraction'])

data_table7 = pq.read_table(final_folder + '/query-7.parquet', filesystem=s3)
wide_df=data_table7.to_pandas()
wide_df["y_m"] = wide_df['Year'].astype(str) +"-"+ wide_df["Month"].astype(str)
plot10 = px.bar(wide_df, x="y_m", y=['single_unit_fraction', 'multi_unit_fraction'])

data_table8 = pq.read_table(final_folder + '/query-8.parquet', filesystem=s3)
wide_df=data_table8.to_pandas()
wide_df["Year_Month"] = wide_df['Year'].astype(str) +"-"+ wide_df["Month"].astype(str)
wide_df['Loan_Term'] = wide_df['Average_Loan_Term'] / 12

plot11 = px.line(wide_df, x="Year_Month", y='Loan_Term', title='Average Loan Term by Issuance Period', labels={
                     "Year_Month": "Issuance Period",
                     "Loan_Term": "Average Loan Term (Years)"},
                     range_y=[0,30])

data_table9 = pq.read_table(final_folder + '/query-9.parquet', filesystem=s3)
wide_df=data_table9.to_pandas()

wide_df["Year_Month"] = wide_df['Issuance_Year'].astype(str) +"-"+ wide_df["Issuance_Month"].astype(str)
plot12 = px.line(wide_df, x="Year_Month", y="Monthly_Payment_Factor", title="Wide-Form Input",labels={
                     "Year_Month": "Issuance Period",
                     "Monthly_Payment_Factor": "Monthly Payment Factor"}, range_y=[0,.007])


data_table10 = pq.read_table(final_folder + '/query-10.parquet', filesystem=s3)
wide_df=data_table10.to_pandas()
```

### Background on the MBS market
 One of the largest classes of financial assets in the United States is the mortgage backed security (MBS). A MBS is backed by a pool of mortgage loans -- payments on a mortgage loan in this pool are passed through to the owner of the MBS. The majority of these MBS are issued by Fannie Mae and Freddie Mac, two government sponsored enterprises who ensure that all principal payments on loans in their MBS pools will be delivered to the owner of the MBS. This means even if a mortgage borrower defaults, the owner of the MBS will still be paid the principal. The unpaid principal balance of loans in an mbs is known as the UPB.

### How the Fed's QE affects mortgage rates
QE is a process through which a central bank purchases financial assets from the open market in an effort to stimulate the economy. QE puts money onto the balance sheet of financial institutions, encouraging them to find new assets to spend this money on. This increases demand for financial assets, which corresponds to lower costs of financing, and an increased incentive to issue new financial assets. For average americans, the largest, easiest financial asset to issue is the mortgage.  For financial institutions, the easiest way to access the mortgage market is through mortgage backed securities.


The graph below shows the monthly change in assets on the Fed's balance sheet plotted alongside the total UPB of newly issued MBS that month. When the monthly change in the Fed's balance sheet is positive, that corresponds to an era of QE. When the monthly change is negative, that corresponds to an era of QT.
```{python}
plot1.show()
```

As you can see, changes in the fed's balancesheet correlate closely with the total issuance upb of the mortgage backed security market. The graph below shows how this affects borrowers through the change in mortgage rates.
```{python}
plot2.show()
```

The average monthly interest rate for new borrowers got as low as 2.85% in February of 2021 after almost a year of QE. As QE tapered off and transitioned into QT mortgage rates skyrocketed to where they are today at 6.68%.

### Characteristics of QE era mortgages

The graph below breaks down new mortgages issued by their purpose: purchase, refinance or cash-out refinance. Purchases are mortgages on newly purchased homes, refinances are people getting new mortgages on homes they've purchased in the past, and cash-out refinances are people refinancing their home and using equity that they've already built in their home to borrow cash.
```{python}
plot4.show()
```

Non-cash refinances were most correlated by interest rates, followed by cash-out refinances while purchases were affexted the least. These trends can be seen more notably on their own individual graphs below, and they begin to paint a picture: lower interest rates were not used to extend cheap financing to people looking to buy a home, they were mostly used to extend financing to pre-existing homeowners 

```{python}
plot5.show()
plot6.show()
plot7.show()
```

This can be seen most notably on the graph below, which plots total UPB issuance of first time homeowners and non-first time homeowners on the same axes. Almost all of the increase in issuance upb during QE and decrease in issuance upb during QT is due to fluctuations in mortgage issuance by people who are pre-existing homeowners.


```{python}
plot8.show()
```

### Investors?
The next examined was occupancy status, I did not find any significant changes in the number of secondary residences or investment properties included in Freddie Mac and Fannie Mae MBSs over the last 4 years. I don't know if this is due to regulatory reasons, but it should be noted that these MBSs are not intended to be sources of financing for commercial mortgages (how an apartment or large housing development would be classified). There was also no meaningful increase in the number of multi-family properties (2-4 family properties) included in MBS pools
```{python}
plot9.show()
```
```{python}
plot10.show()
```

### Impact on affordability
In a conventional level-payment mortgage, a mortgage borrower's monthly payment equals :
$$
MP = MPF * MB_0
$$

Where
$$
MPF = Mortgage Payment Factor
$$
$$
MB_0 = Original Mortgage Balance
$$

The mortgage payment factor itself depends on the interest rate and loan term.
The following graph shows the average mortgage payment factor over time.

```{python}
plot12.show()
```

The current average mortgage payment factor is 48% higher than it was in February of 2021, meaning a current buyer of a same-priced property would have a 48% higher monthly payment than in February of 2021. This makes homes less affordable and ultimately means a decrease in demand (the amount of money people are willing/able to spend on homes).

On the other hand, it means a homeowner who locked in their mortgage in February of 2021 would have to buy a new home worth 33% less to pay the same mortgage payment. This makes selling a home illogical unless the homeowner's house has depreciated by over 33%, or the homeowner has significant personal factors leading them to sell (i.e job, divorce, death,etc.). This ultimately means a decrease in supply (the amount of homes people are willing to sell)


Decreased demand and decreased supply together mean low volume, so a low number of people moving into home-ownership. But how long will this last?
```{python}
plot11.show()
```

The average mortgage loan term has been over 25 years throughout the period surveyed. This means that the supply side incentive for owners to hold is likely to persist for a long time. Unless the Federal Reserve re-enacts QE, or new housing supply enters the market.

### Conclusion
The Fed's QE lowered interest rates on residential mortgages, and functioned as a subsidy on mortgage borrowing during the covid-era. Issuers of subsidized mortgages were disproportionately pre-existing homeowners. The Fed's QT has raised interest rates, forcing modern mortgage borrowers to pay a premium for mortgage borrowing. Issuers of modern mortgage owners are disproportionately first-time homebuyers. This trend is likely to continue for the future.